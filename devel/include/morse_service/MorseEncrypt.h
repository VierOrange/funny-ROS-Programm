// Generated by gencpp from file morse_service/MorseEncrypt.msg
// DO NOT EDIT!


#ifndef MORSE_SERVICE_MESSAGE_MORSEENCRYPT_H
#define MORSE_SERVICE_MESSAGE_MORSEENCRYPT_H

#include <ros/service_traits.h>


#include <morse_service/MorseEncryptRequest.h>
#include <morse_service/MorseEncryptResponse.h>


namespace morse_service
{

struct MorseEncrypt
{

typedef MorseEncryptRequest Request;
typedef MorseEncryptResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct MorseEncrypt
} // namespace morse_service


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::morse_service::MorseEncrypt > {
  static const char* value()
  {
    return "1e5e7e36495a9dcab3e1ae207c3374b3";
  }

  static const char* value(const ::morse_service::MorseEncrypt&) { return value(); }
};

template<>
struct DataType< ::morse_service::MorseEncrypt > {
  static const char* value()
  {
    return "morse_service/MorseEncrypt";
  }

  static const char* value(const ::morse_service::MorseEncrypt&) { return value(); }
};


// service_traits::MD5Sum< ::morse_service::MorseEncryptRequest> should match 
// service_traits::MD5Sum< ::morse_service::MorseEncrypt > 
template<>
struct MD5Sum< ::morse_service::MorseEncryptRequest>
{
  static const char* value()
  {
    return MD5Sum< ::morse_service::MorseEncrypt >::value();
  }
  static const char* value(const ::morse_service::MorseEncryptRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::morse_service::MorseEncryptRequest> should match 
// service_traits::DataType< ::morse_service::MorseEncrypt > 
template<>
struct DataType< ::morse_service::MorseEncryptRequest>
{
  static const char* value()
  {
    return DataType< ::morse_service::MorseEncrypt >::value();
  }
  static const char* value(const ::morse_service::MorseEncryptRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::morse_service::MorseEncryptResponse> should match 
// service_traits::MD5Sum< ::morse_service::MorseEncrypt > 
template<>
struct MD5Sum< ::morse_service::MorseEncryptResponse>
{
  static const char* value()
  {
    return MD5Sum< ::morse_service::MorseEncrypt >::value();
  }
  static const char* value(const ::morse_service::MorseEncryptResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::morse_service::MorseEncryptResponse> should match 
// service_traits::DataType< ::morse_service::MorseEncrypt > 
template<>
struct DataType< ::morse_service::MorseEncryptResponse>
{
  static const char* value()
  {
    return DataType< ::morse_service::MorseEncrypt >::value();
  }
  static const char* value(const ::morse_service::MorseEncryptResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MORSE_SERVICE_MESSAGE_MORSEENCRYPT_H
